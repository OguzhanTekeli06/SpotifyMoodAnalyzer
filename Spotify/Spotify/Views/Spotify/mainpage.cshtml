@model SpotifyDomainLayer.UserProfile

@{
    ViewData["Title"] = "Ana Sayfa";
}

<link href="~/css/mainpage.css" rel="stylesheet" />

<div class="main-container">
    <div class="profile-section">
        @if (ViewBag.ErrorMessage != null)
        {
            <div class="alert alert-danger">
                <strong>Hata:</strong> @ViewBag.ErrorMessage
            </div>
        }
        else if (Model != null)
        {

            @if (!string.IsNullOrEmpty(Model.ProfilePictureUrl))
            {
                <div class="profile-picture">
                    <img src="@Model.ProfilePictureUrl" alt="Profile Picture" />
                </div>
            }
            else
            {
                <p>No profile picture available.</p>
            }

            <p><strong>Display Name:</strong> @Model.DisplayName</p>
            <p><strong>Email:</strong> @Model.Email</p>
            <p><strong>Country:</strong> @Model.Country</p>
            <p><strong>Followers:</strong> @Model.Followers</p>
            <p><strong>Product:</strong> @Model.Product</p>
            //<p><strong>Url:</strong> @Model.Uri</p>
            <p><strong>Spotify ID:</strong> @Model.Id</p>









        }
        else
        {
            <p>Profil verisi henüz yüklenemedi.</p>
        }
    </div>

    <div class="second">
        <div class="info">
            <div class="action-section-container">
                <div class="action-section1">
                    <p>En son dinlenen şarkılar:</p>
                    <form method="get" action="@Url.Action("GetRecentlyPlayed", "Spotify")">
                        <button type="submit">Son Çalınanları Göster</button>
                    </form>
                </div>

                <div class="action-section1">
                    <p>Duygu durum analizinizi görmek için tıklayın:</p>
                    <form method="get" action="@Url.Action("GetRecentlyPlayed", "Spotify")">
                        <button type="submit">Duygu durum analizi</button>
                    </form>
                </div>

                <div class="action-section1">
                    <p>Şarkı öneri sistemi:</p>
                    <form method="get" action="@Url.Action("GetRecentlyPlayed", "Spotify")">
                        <button type="submit">Şarkı öneri sistemi</button>
                    </form>
                </div>


            </div>



            <div class="volumeandcur">

                <div class="volume">
                    <h2>Ses Ayarı</h2>

                    <!-- Ses seviyesi çubuğu -->
                    <input type="range" id="volumeSlider" min="0" max="100" value="50" step="1" />
                    <p>Ses Seviyesi: <span id="volumeValue">50</span>%</p>

                    <!-- Set Volume Button -->
                    <button id="setVolumeButton" onclick="setVolume()">Ses Ayarla</button>

                    <script>
                        // Ses seviyesini slider'dan al
                        var volumeSlider = document.getElementById("volumeSlider");
                        var volumeValue = document.getElementById("volumeValue");

                        // Slider'ın değerini her değiştirdiğinde güncelle
                        volumeSlider.oninput = function() {
                            volumeValue.textContent = volumeSlider.value;
                        }

                        // Ses seviyesini ayarlama işlemi
                                    function setVolume() {
                            var volume = volumeSlider.value;

                            // Volume modelini oluştur
                            var volumeModel = {
                                volumePercent: volume
                            };

                            fetch('/Spotify/SetVolume', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify(volumeModel)
                            })
                            .then(response => {
                                if (response.ok) {
                                    alert("Ses seviyesi başarıyla ayarlandı.");
                                } else {
                                    alert("Ses seviyesi ayarlanırken bir hata oluştu.");
                                }
                            })
                            .catch(error => {
                                alert("Bir hata oluştu: " + error);
                            });
                        }
                    </script>
                </div>

                <div class="currently-playing-section">
                    @if (ViewBag.CurrentlyPlayingMessage != null)
                    {
                        <p>@ViewBag.CurrentlyPlayingMessage</p>
                    }
                </div>


                
            </div>


        </div>





        <div class="play">
            

            

            <div class="action-section">
               
                <form method="get" action="@Url.Action("SkipToPrevious", "Spotify")">
                    <button type="submit" class="play">
                        <img src="/images/left.png" alt="Previous" />
                    </button>
                </form>
            </div>

            <div class="action-section">
              
                <form method="get" action="@Url.Action("PausePlayback", "Spotify")">
                    <button type="submit" class="play">
                        <img src="/images/pause.png" alt="Pause" />
                    </button>
                </form>
            </div>

            <div class="action-section">
                
                <form method="get" action="@Url.Action("SkipToNext", "Spotify")">
                    <button type="submit" class="play">
                        <img src="/images/right.png" alt="Next" />
                    </button>
                </form>
            </div>
            


        </div>
    </div>





</div>
